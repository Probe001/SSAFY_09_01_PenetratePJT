package com.ssafy.boot.controller;

import java.sql.SQLException;
import java.util.Arrays;
import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.ssafy.boot.dto.Book;
import com.ssafy.boot.model.service.BookService;

import lombok.extern.slf4j.Slf4j;

@RestController
@RequestMapping("/book")
@Slf4j
@CrossOrigin("http://127.0.0.1:5500")
public class BookController {

	private Logger logger = LoggerFactory.getLogger(BookController.class);
	
	@Autowired
	private BookService bookService;
	
	/**
	 * 책 전체 목록 조회 요청
	 * @throws SQLException 
	 */
	@GetMapping("")
	public ResponseEntity<?> getBookList() throws SQLException {
		
		//책 목록 데이터 조회
		List<Book> bookList = bookService.selectAll();
		
//		if(true) throw new RuntimeException("런타임 에러 발생");
		
		return ResponseEntity.ok().body(bookList);
	}
	
	/**
	 * 등록
	 * @throws SQLException 
	 */
	@PostMapping
	public ResponseEntity<?> registBook(
			// @ModelAttribute Book book // key=value&key=value로 받을 때
			@RequestBody Book book // json data로 받을 때
			) throws SQLException {
		
		log.debug(book.toString());
		
		bookService.registBook(book);
		
		return ResponseEntity.ok().build();
	}
	
	/**
	 * 책 상세 조회 요청
	 * @throws SQLException 
	 */
	@GetMapping("/{isbn}")
	public ResponseEntity<?> getBookListPage(@PathVariable String isbn) throws SQLException {
		// @PathVariable(name="isbn") String i 를 단축시키면 위처럼 된다.
		//책 데이터 조회
		Book book = bookService.selectByIsbn(isbn);
		
		return ResponseEntity.ok().body(book);
	}
	
	
	/**
	 * 삭제요청 처리 
	 * @throws SQLException 
	 */
	@DeleteMapping("/{isbn}")
	public ResponseEntity<?> deleteBooks(@PathVariable String[] isbn) throws SQLException {

		logger.debug("삭제할 isbn : {}", Arrays.toString(isbn));
		
		bookService.deleteByIsbn(isbn);
		
		return ResponseEntity.ok().build();
	}
	
	
}
